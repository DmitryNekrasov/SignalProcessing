/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package signalprocessing;

import java.awt.Graphics;
import java.awt.Graphics2D;
import java.util.ArrayList;
import java.util.List;
import org.knowm.xchart.QuickChart;
import org.knowm.xchart.XYChart;

/**
 *
 * @author nekrasov
 */
public class Lab02SupportingJFrame extends javax.swing.JFrame {

    final String seriesName = "y(x)";
    
    XYChart irChart, fr1Chart, fr2Chart, resultChart;
    
    /**
     * Creates new form Lab02SupportingJFrame
     */
    public Lab02SupportingJFrame() {
        initComponents();
        
        irChart = QuickChart.getChart("", "", "", seriesName, new double[1], new double[1]);
        fr1Chart = QuickChart.getChart("", "", "", seriesName, new double[1], new double[1]);
        fr2Chart = QuickChart.getChart("", "", "", seriesName, new double[1], new double[1]);
        resultChart = QuickChart.getChart("", "", "", seriesName, new double[1], new double[1]);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fr1Panel = new javax.swing.JPanel();
        fr2Panel = new javax.swing.JPanel();
        resultPanel = new javax.swing.JPanel();
        irPanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout fr1PanelLayout = new javax.swing.GroupLayout(fr1Panel);
        fr1Panel.setLayout(fr1PanelLayout);
        fr1PanelLayout.setHorizontalGroup(
            fr1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1323, Short.MAX_VALUE)
        );
        fr1PanelLayout.setVerticalGroup(
            fr1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 150, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout fr2PanelLayout = new javax.swing.GroupLayout(fr2Panel);
        fr2Panel.setLayout(fr2PanelLayout);
        fr2PanelLayout.setHorizontalGroup(
            fr2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        fr2PanelLayout.setVerticalGroup(
            fr2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 150, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout resultPanelLayout = new javax.swing.GroupLayout(resultPanel);
        resultPanel.setLayout(resultPanelLayout);
        resultPanelLayout.setHorizontalGroup(
            resultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        resultPanelLayout.setVerticalGroup(
            resultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 150, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout irPanelLayout = new javax.swing.GroupLayout(irPanel);
        irPanel.setLayout(irPanelLayout);
        irPanelLayout.setHorizontalGroup(
            irPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        irPanelLayout.setVerticalGroup(
            irPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 150, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(fr1Panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(fr2Panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(resultPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(irPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(irPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fr1Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fr2Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(resultPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void makeAll(int N, double fc) {
        makeFilter(N, fc);
    }
    
    void makeFilter(int N, double fc) {
        double step = 0.05;
        Filter filter = new Filter(N, fc, step);
        
        List<Double> impulseResponse = filter.getImpulseResponse();
        updateIrChart(impulseResponse);
        
        List<Double> frequencyResponse = filter.getFrequencyResponse();
        updateFrChart(fr1Chart, frequencyResponse, step);
        
        List<Double> logFrequencyResponse = filter.getLogFrequencyResponse();
        updateFrChart(fr2Chart, logFrequencyResponse, step);
        
        repaint();
    }
    
    void updateIrChart(List<Double> signal) {
        List<Double> x = new ArrayList<>();
        for (int i = 0, ei = signal.size(); i < ei; i++) {
            x.add((double) i);
        }
        Common.updateChart(irChart, x, signal, seriesName);
    }
    
    void updateFrChart(XYChart chart, List<Double> signal, double step) {
        List<Double> x = new ArrayList<>();
        for (int i = 0, ei = signal.size() / 2; i < ei; i++) {
            double value = i * step;
            x.add(value);
        }
        Common.updateChart(chart, x, signal.subList(0, signal.size() / 2), seriesName);
    }
    
    @Override
    public void paint(Graphics g) {
        super.paint(g);

        Graphics2D irPanelGraphics = (Graphics2D) irPanel.getGraphics();
        irChart.paint(irPanelGraphics, irPanel.getWidth(), irPanel.getHeight());
        
        Graphics2D fr1PanelGraphics = (Graphics2D) fr1Panel.getGraphics();
        fr1Chart.paint(fr1PanelGraphics, fr1Panel.getWidth(), fr1Panel.getHeight());
        
        Graphics2D fr2PanelGraphics = (Graphics2D) fr2Panel.getGraphics();
        fr2Chart.paint(fr2PanelGraphics, fr2Panel.getWidth(), fr2Panel.getHeight());
        
        Graphics2D resultPanelGraphics = (Graphics2D) resultPanel.getGraphics();
        resultChart.paint(resultPanelGraphics, resultPanel.getWidth(), resultPanel.getHeight());
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel fr1Panel;
    private javax.swing.JPanel fr2Panel;
    private javax.swing.JPanel irPanel;
    private javax.swing.JPanel resultPanel;
    // End of variables declaration//GEN-END:variables
}
