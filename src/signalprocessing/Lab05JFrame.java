/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package signalprocessing;

import java.awt.Graphics;
import java.awt.Graphics2D;
import java.util.List;
import org.knowm.xchart.QuickChart;
import org.knowm.xchart.XYChart;

/**
 *
 * @author nekrasov
 */
public class Lab05JFrame extends javax.swing.JFrame {

    final String seriesName = "y(x)";
    
    XYChart signalChart, transformChart, resultChart;
    
    /**
     * Creates new form Lab05JFrame
     */
    public Lab05JFrame() {
        initComponents();
        
        signalChart = QuickChart.getChart("", "", "", seriesName, new double[1], new double[1]);
        transformChart = QuickChart.getChart("", "", "", seriesName, new double[1], new double[1]);
        resultChart = QuickChart.getChart("", "", "", seriesName, new double[1], new double[1]);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        signalPanel = new javax.swing.JPanel();
        signalTypeLabel = new javax.swing.JLabel();
        signalTypeComboBox = new javax.swing.JComboBox<>();
        startButton = new javax.swing.JButton();
        transformPanel = new javax.swing.JPanel();
        resultPanel = new javax.swing.JPanel();
        waveletLabel = new javax.swing.JLabel();
        waveletComboBox = new javax.swing.JComboBox<>();
        minLabel = new javax.swing.JLabel();
        minTextField = new javax.swing.JTextField();
        maxLabel = new javax.swing.JLabel();
        maxTextField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout signalPanelLayout = new javax.swing.GroupLayout(signalPanel);
        signalPanel.setLayout(signalPanelLayout);
        signalPanelLayout.setHorizontalGroup(
            signalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        signalPanelLayout.setVerticalGroup(
            signalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 150, Short.MAX_VALUE)
        );

        signalTypeLabel.setText("Тип сигнала:");

        signalTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Кардиосигнал", "Реосигнал", "Велосигнал" }));

        startButton.setText("Старт");
        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout transformPanelLayout = new javax.swing.GroupLayout(transformPanel);
        transformPanel.setLayout(transformPanelLayout);
        transformPanelLayout.setHorizontalGroup(
            transformPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        transformPanelLayout.setVerticalGroup(
            transformPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 150, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout resultPanelLayout = new javax.swing.GroupLayout(resultPanel);
        resultPanel.setLayout(resultPanelLayout);
        resultPanelLayout.setHorizontalGroup(
            resultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        resultPanelLayout.setVerticalGroup(
            resultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 150, Short.MAX_VALUE)
        );

        waveletLabel.setText("Вейвлет:");

        waveletComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Хаара", "Добеши d4" }));

        minLabel.setText("min:");

        minTextField.setText("64");

        maxLabel.setText("max:");

        maxTextField.setText("2048");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(signalPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(signalTypeLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(signalTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(waveletLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(waveletComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(minLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(minTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(maxLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(maxTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(startButton))
                .addContainerGap(469, Short.MAX_VALUE))
            .addComponent(transformPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(resultPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(signalPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(transformPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(resultPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(signalTypeLabel)
                    .addComponent(signalTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(waveletLabel)
                    .addComponent(waveletComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(minLabel)
                    .addComponent(minTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(maxLabel)
                    .addComponent(maxTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(startButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void startButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButtonActionPerformed
        int index = signalTypeComboBox.getSelectedIndex();
        SignalFromFile signalFromFile;
        double sampleRate = 1;
        switch (index) {
            case 0:
                signalFromFile = new SignalFromFile("signals/Cardio.txt");
                break;

            case 1:
                signalFromFile = new SignalFromFile("signals/Reo.txt");
                break;

            default:
                signalFromFile = new SignalFromFile("signals/Velo.txt");
        }
        
        List<Double> signal = signalFromFile.getSignal();
        Common.updateSignalChart(signalChart, signal, sampleRate, seriesName);
        
        int minFilter = Integer.parseInt(minTextField.getText());
        int maxFilter = Integer.parseInt(maxTextField.getText());
        
        List<Double> transformResult;
        List<Double> inverseTransformResult;
        
        if (waveletComboBox.getSelectedIndex() == 0) {
            transformResult = Wavelet.getHaarTransform(signal);
            transformResult = Wavelet.filterMinMax(transformResult, minFilter, maxFilter);
            inverseTransformResult = Wavelet.getHaarInverseTransform(transformResult);
        } else {
            transformResult = Wavelet.getDaubechiesTransform(signal);
            transformResult = Wavelet.filterMinMax(transformResult, minFilter, maxFilter);
            inverseTransformResult = Wavelet.getDaubechiesInverseTransform(transformResult);
        }
        
        Common.updateSignalChart(transformChart, transformResult, 1, seriesName);
        Common.updateSignalChart(resultChart, inverseTransformResult, sampleRate, seriesName);
        
        repaint();
    }//GEN-LAST:event_startButtonActionPerformed

    @Override
    public void paint(Graphics g) {
        super.paint(g);
        
        Graphics2D signalPanelGraphics = (Graphics2D) signalPanel.getGraphics();
        signalChart.paint(signalPanelGraphics, signalPanel.getWidth(), signalPanel.getHeight());
        
        Graphics2D transformPanelGraphics = (Graphics2D) transformPanel.getGraphics();
        transformChart.paint(transformPanelGraphics, transformPanel.getWidth(), transformPanel.getHeight());
        
        Graphics2D resultPanelGraphics = (Graphics2D) resultPanel.getGraphics();
        resultChart.paint(resultPanelGraphics, resultPanel.getWidth(), resultPanel.getHeight());
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel maxLabel;
    private javax.swing.JTextField maxTextField;
    private javax.swing.JLabel minLabel;
    private javax.swing.JTextField minTextField;
    private javax.swing.JPanel resultPanel;
    private javax.swing.JPanel signalPanel;
    private javax.swing.JComboBox<String> signalTypeComboBox;
    private javax.swing.JLabel signalTypeLabel;
    private javax.swing.JButton startButton;
    private javax.swing.JPanel transformPanel;
    private javax.swing.JComboBox<String> waveletComboBox;
    private javax.swing.JLabel waveletLabel;
    // End of variables declaration//GEN-END:variables
}
